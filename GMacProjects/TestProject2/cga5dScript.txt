//CGA5D Properties
[:geometry3d.cga |> reset:];

var cgaFrame = [:cga |> frame:];

/*
[:
   //Two 3D euclidean position vectors for two points P and Q
   let P = Vector(0, 'Px', 'Py' , 'Pz', 0) 
   let Q = Vector(0, 'Qx', 'Qy' , 'Qz', 0) 
   
   //Their conformal representation as a weighted conformal null vector
   let p = 'Pw' * (no + P + P gp P gp ni / 2)
   let q = 'Qw' * (no + Q + Q gp Q gp ni / 2)
   
   //The weight of the conformal point is the coefficient of the (no) null basis vector
   let pw = -ni sp p
   let qw = -ni sp q
   
   //Two ways for computing the distance between the original points using their 3D position vectors or their conformal null vectors
   let d1 = (P - Q) sp (P - Q)
   let d2 = -2 * (p / pw) sp (q / qw)
|> exec
:];

<:"P = " |> ap:>; [:P |> vo |> as |> apl:];
<:"p = " |> ap:>; [:p |> vo |> as |> apl:];
<:"Q = " |> ap:>; [:Q |> vo |> as |> apl:];
<:"q = " |> ap:>; [:q |> vo |> as |> apl:];

//The conformal vectors representing a 3D Euclidean point is a null vector
<:"p sp p = " |> ap:>; [:p sp p |> ev |> as |> apl:];
<:"q sp q = " |> ap:>; [:q sp q |> ev |> as |> apl:];

//The expression (-ni sp p) selects the coefficient of no in any cga vector p
<:"-ni sp p = " |> ap:>; [:-ni sp p |> ev |> as |> apl:];
<:"-ni sp q = " |> ap:>; [:-ni sp q |> ev |> as |> apl:];

//The square distance between two points
<:"d1 = (P - Q) sp (P - Q) = " |> ap:>; [:d1 |> vo |> as |> apl:];
<:"d2 = -2 * (p / (-ni sp p)) sp (q / (-ni sp q)) = " |> ap:>; [:d2 |> vo |> as |> apl:];
<:"d1 - d2 = " |> ap:>; [:d1 - d2 |> ev |> as |> apl:];
*/

<:
@"
    //A normal vector to some plane
    let N = Vector(0, 'Nx', 'Ny', 'Nz', 0)
    
    //The value of D is proportional to the distance of the plane from the origin
    let D = 'd * Sqrt[$norm2(N)$]'
    
    //The non-null conformal vector representing the same plane
    let Pl = N + D * ni
"    
    |> exec
:>;

<:"N = " |> ap:>; [:N |> vo |> as |> apl:];
<:"D = " |> ap:>; [:D |> vo |> as |> apl:];
<:"Pl = " |> ap:>; [:Pl |> vo |> as |> apl:];

