using GMac.GMacAPI.Binding;
using GMac.GMacAPI.Target;
using GMac.GMacAST.Symbols;

namespace GMac.GMacAPI.CodeGen
{
    /// <summary>
    /// This class can be used to generate a single base macro or a set of related macros into a single code file. 
    /// Several related bindings of the same macro or related macros can be generated by several calls to the 
    /// GenerateComputationsCode() method with varying binding and target naming results depending on more derived 
    /// class parameters. The SetBaseMacro() mathod can be called to change the base macro before calling the
    /// GenerateComputationsCode() mathod.
    /// </summary>
    public abstract class GMacMacroCodeFileComposer : GMacCodeFileComposer
    {
        public GMacMacroCodeComposer MacroCodeGenerator { get; set; }

        public AstMacro BaseMacro => MacroCodeGenerator.BaseMacro;


        protected GMacMacroCodeFileComposer(GMacCodeLibraryComposer libGen, AstMacro baseMacro = null)
            : base(libGen)
        {
            MacroCodeGenerator = new GMacMacroCodeComposer(libGen, baseMacro);
        }

        protected GMacMacroCodeFileComposer(GMacMacroCodeComposerDefaults defaults, AstMacro baseMacro = null)
            : base(defaults.LibraryComposer)
        {
            MacroCodeGenerator = new GMacMacroCodeComposer(defaults, baseMacro);
        }

        protected GMacMacroCodeFileComposer(GMacMacroCodeComposer macroCodeGen)
            : base(macroCodeGen.LibraryComposer)
        {
            MacroCodeGenerator = macroCodeGen;
        }


        protected virtual void InitializeGenerator(GMacMacroCodeComposer macroCodeGen)
        {
        }

        protected abstract void SetMacroParametersBindings(GMacMacroBinding macroBinding);

        protected abstract void SetTargetVariablesNames(GMacTargetVariablesNaming targetNaming);


        protected void SetBaseMacro(AstMacro baseMacro)
        {
            MacroCodeGenerator.SetBaseMacro(baseMacro);
        }

        protected string GenerateComputationsCode()
        {
            MacroCodeGenerator.ActionSetMacroParametersBindings = SetMacroParametersBindings;

            MacroCodeGenerator.ActionSetTargetVariablesNames = SetTargetVariablesNames;

            InitializeGenerator(MacroCodeGenerator);

            return MacroCodeGenerator.Generate();
        }
    }
}
